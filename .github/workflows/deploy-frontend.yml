name: Deploy Frontend

on:
  push:
    branches:
      - main
      - feature/TON-5-init-frontend

env:
  HEROKU_API_KEY: ${{secrets.HEROKU_API_KEY}}
  HEROKU_APP_NAME: ${{secrets.HEROKU_APP_NAME}}

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: "24"
          cache: "npm"
          cache-dependency-path: apps/frontend/package-lock.json
      - run: npm ci
        working-directory: apps/frontend
      - run: npm run lint
        working-directory: apps/frontend
      - run: npm run format:check
        working-directory: apps/frontend

  typecheck:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: "24"
          cache: "npm"
          cache-dependency-path: apps/frontend/package-lock.json
      - run: npm ci
        working-directory: apps/frontend
      - run: npm run type-check
        working-directory: apps/frontend

  unit-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: "24"
          cache: "npm"
          cache-dependency-path: apps/frontend/package-lock.json
      - run: npm ci
        working-directory: apps/frontend

      - name: Run Unit Tests
        run: npm run test:unit
        working-directory: apps/frontend

  e2e-test:
    runs-on: ubuntu-latest
    # if: github.ref == 'refs/heads/main'
    steps:
      - name: Run E2E Tests
        run: npm run test:e2e
        working-directory: apps/frontend

  deploy:
    runs-on: ubuntu-latest
    needs: [lint, typecheck, unit-test, e2e-test]
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Heroku Container Registry
        run: echo "$HEROKU_API_KEY" | docker login --username=_ --password-stdin registry.heroku.com

      - name: Build Docker image
        run: |
          docker buildx build \
            --platform linux/amd64 \
            --provenance=false \
            -t registry.heroku.com/$HEROKU_APP_NAME/web \
            -f apps/frontend/Dockerfile.prod ./apps/frontend

      - name: Push Docker image
        run: docker push registry.heroku.com/$HEROKU_APP_NAME/web

      - name: Install Heroku CLI
        run: curl https://cli-assets.heroku.com/install.sh | sudo sh

      - name: Release to Heroku
        run: heroku container:release web -a $HEROKU_APP_NAME
